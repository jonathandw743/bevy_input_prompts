use bevy_asset::AssetPath;
use bevy_input::keyboard::KeyCode;
use leafwing_input_manager::prelude::Buttonlike;

pub enum LightDark {
    Light,
    Dark,
}

pub struct XeluKeyCode {
    key_code: KeyCode,
    light_dark: LightDark,
}

impl<'a> Into<AssetPath<'a>> for XeluKeyCode {
    fn into(self) -> AssetPath<'a> {
        let key_name = match self.key_code {
            // autogenerated by AI
            KeyCode::KeyA => "Dark/A_Key_Dark.png",
            KeyCode::KeyB => "Dark/B_Key_Dark.png",
            KeyCode::KeyC => "Dark/C_Key_Dark.png",
            KeyCode::KeyD => "Dark/D_Key_Dark.png",
            KeyCode::KeyE => "Dark/E_Key_Dark.png",
            KeyCode::KeyF => "Dark/F_Key_Dark.png",
            KeyCode::KeyG => "Dark/G_Key_Dark.png",
            KeyCode::KeyH => "Dark/H_Key_Dark.png",
            KeyCode::KeyI => "Dark/I_Key_Dark.png",
            KeyCode::KeyJ => "Dark/J_Key_Dark.png",
            KeyCode::KeyK => "Dark/K_Key_Dark.png",
            KeyCode::KeyL => "Dark/L_Key_Dark.png",
            KeyCode::KeyM => "Dark/M_Key_Dark.png",
            KeyCode::KeyN => "Dark/N_Key_Dark.png",
            KeyCode::KeyO => "Dark/O_Key_Dark.png",
            KeyCode::KeyP => "Dark/P_Key_Dark.png",
            KeyCode::KeyQ => "Dark/Q_Key_Dark.png",
            KeyCode::KeyR => "Dark/R_Key_Dark.png",
            KeyCode::KeyS => "Dark/S_Key_Dark.png",
            KeyCode::KeyT => "Dark/T_Key_Dark.png",
            KeyCode::KeyU => "Dark/U_Key_Dark.png",
            KeyCode::KeyV => "Dark/V_Key_Dark.png",
            KeyCode::KeyW => "Dark/W_Key_Dark.png",
            KeyCode::KeyX => "Dark/X_Key_Dark.png",
            KeyCode::KeyY => "Dark/Y_Key_Dark.png",
            KeyCode::KeyZ => "Dark/Z_Key_Dark.png",
            KeyCode::Digit1 => "Dark/1_Key_Dark.png",
            KeyCode::Digit2 => "Dark/2_Key_Dark.png",
            KeyCode::Digit3 => "Dark/3_Key_Dark.png",
            KeyCode::Digit4 => "Dark/4_Key_Dark.png",
            KeyCode::Digit5 => "Dark/5_Key_Dark.png",
            KeyCode::Digit6 => "Dark/6_Key_Dark.png",
            KeyCode::Digit7 => "Dark/7_Key_Dark.png",
            KeyCode::Digit8 => "Dark/8_Key_Dark.png",
            KeyCode::Digit9 => "Dark/9_Key_Dark.png",
            KeyCode::Digit0 => "Dark/0_Key_Dark.png",
            KeyCode::Escape => "Dark/Esc_Key_Dark.png",
            KeyCode::F1 => "Dark/F1_Key_Dark.png",
            KeyCode::F2 => "Dark/F2_Key_Dark.png",
            KeyCode::F3 => "Dark/F3_Key_Dark.png",
            KeyCode::F4 => "Dark/F4_Key_Dark.png",
            KeyCode::F5 => "Dark/F5_Key_Dark.png",
            KeyCode::F6 => "Dark/F6_Key_Dark.png",
            KeyCode::F7 => "Dark/F7_Key_Dark.png",
            KeyCode::F8 => "Dark/F8_Key_Dark.png",
            KeyCode::F9 => "Dark/F9_Key_Dark.png",
            KeyCode::F10 => "Dark/F10_Key_Dark.png",
            KeyCode::F11 => "Dark/F11_Key_Dark.png",
            KeyCode::F12 => "Dark/F12_Key_Dark.png",
            KeyCode::Minus => "Dark/Minus_Key_Dark.png",
            KeyCode::Equal => "Dark/Plus_Key_Dark.png",
            KeyCode::Backslash => "Dark/Backslash_Key_Dark.png",
            KeyCode::Backspace => "Dark/Backspace_Key_Dark.png",
            KeyCode::Tab => "Dark/Tab_Key_Dark.png",
            KeyCode::BracketLeft => "Dark/Bracket_Left_Key_Dark.png",
            KeyCode::BracketRight => "Dark/Bracket_Right_Key_Dark.png",
            KeyCode::Enter => "Dark/Enter_Key_Dark.png",
            KeyCode::Semicolon => "Dark/Semicolon_Key_Dark.png",
            KeyCode::Quote => "Dark/Quote_Key_Dark.png",
            KeyCode::Comma => "Dark/Comma_Key_Dark.png",
            KeyCode::Period => "Dark/Period_Key_Dark.png",
            KeyCode::Slash => "Dark/Slash_Key_Dark.png",
            KeyCode::Space => "Dark/Space_Key_Dark.png",
            KeyCode::ShiftLeft => "Dark/Shift_Key_Dark.png",
            KeyCode::ShiftRight => "Dark/Shift_Key_Dark.png",
            KeyCode::ControlLeft => "Dark/Ctrl_Key_Dark.png",
            KeyCode::ControlRight => "Dark/Ctrl_Key_Dark.png",
            KeyCode::AltLeft => "Dark/Alt_Key_Dark.png",
            KeyCode::AltRight => "Dark/Alt_Key_Dark.png",
            KeyCode::SuperLeft => "Dark/Win_Key_Dark.png",
            KeyCode::SuperRight => "Dark/Win_Key_Dark.png",
            KeyCode::ArrowUp => "Dark/Arrow_Up_Key_Dark.png",
            KeyCode::ArrowDown => "Dark/Arrow_Down_Key_Dark.png",
            KeyCode::ArrowLeft => "Dark/Arrow_Left_Key_Dark.png",
            KeyCode::ArrowRight => "Dark/Arrow_Right_Key_Dark.png",

            // manual
            KeyCode::CapsLock => "Dark/Caps_Lock_Key_Dark.png",
            KeyCode::Delete => "Dark/Del_Key_Dark.png",
            KeyCode::End => "Dark/End_Key_Dark.png",
            KeyCode::Home => "Dark/Home_Key_Dark.png",
            KeyCode::Insert => "Dark/Insert_Key_Dark.png",
            KeyCode::PageDown => "Dark/Page_Down_Key_Dark.png",
            KeyCode::PageUp => "Dark/Page_Up_Key_Dark.png",
            KeyCode::NumpadAdd => "Dark/Plus_Tall_Key_Dark.png",
            KeyCode::NumpadEnter => "Dark/Enter_Tall_Key_Dark.png",
            KeyCode::PrintScreen => "Dark/Print_Screen_Key_Dark.png",
            KeyCode::Meta => "Dark/Win_Key_Dark.png",

            // no xelu prompts for these
            KeyCode::Katakana
            | KeyCode::Hiragana
            | KeyCode::Undo
            | KeyCode::Select
            | KeyCode::Props
            | KeyCode::Paste
            | KeyCode::Open
            | KeyCode::Find
            | KeyCode::Cut
            | KeyCode::Copy
            | KeyCode::Again
            | KeyCode::Suspend
            | KeyCode::Resume
            | KeyCode::Abort
            | KeyCode::Turbo
            | KeyCode::Hyper
            | KeyCode::WakeUp
            | KeyCode::AudioVolumeUp
            | KeyCode::AudioVolumeMute
            | KeyCode::AudioVolumeDown
            | KeyCode::Sleep
            | KeyCode::Power
            | KeyCode::MediaTrackPrevious
            | KeyCode::MediaTrackNext
            | KeyCode::MediaStop
            | KeyCode::MediaSelect
            | KeyCode::MediaPlayPause
            | KeyCode::LaunchMail
            | KeyCode::LaunchApp2
            | KeyCode::LaunchApp1
            | KeyCode::Eject
            | KeyCode::BrowserStop
            | KeyCode::BrowserSearch
            | KeyCode::BrowserRefresh
            | KeyCode::BrowserHome
            | KeyCode::BrowserForward
            | KeyCode::BrowserFavorites
            | KeyCode::BrowserBack
            | KeyCode::Pause
            | KeyCode::ScrollLock
            | KeyCode::FnLock
            | KeyCode::Fn
            | KeyCode::NumpadSubtract
            | KeyCode::NumpadStar
            | KeyCode::NumpadParenRight
            | KeyCode::NumpadParenLeft
            | KeyCode::NumpadMultiply
            | KeyCode::NumpadMemorySubtract
            | KeyCode::NumpadMemoryStore
            | KeyCode::NumpadMemoryRecall
            | KeyCode::NumpadMemoryClear
            | KeyCode::NumpadMemoryAdd
            | KeyCode::NumpadHash
            | KeyCode::NumpadEqual
            | KeyCode::NumpadDivide
            | KeyCode::NumpadDecimal
            | KeyCode::NumpadComma
            | KeyCode::NumpadClearEntry
            | KeyCode::NumpadClear
            | KeyCode::NumpadBackspace
            | KeyCode::Numpad1
            | KeyCode::Numpad2
            | KeyCode::Numpad3
            | KeyCode::Numpad4
            | KeyCode::Numpad5
            | KeyCode::Numpad6
            | KeyCode::Numpad7
            | KeyCode::Numpad8
            | KeyCode::Numpad9
            | KeyCode::Numpad0
            | KeyCode::NumLock
            | KeyCode::Help
            | KeyCode::NonConvert
            | KeyCode::Lang5
            | KeyCode::Lang4
            | KeyCode::Lang3
            | KeyCode::Lang2
            | KeyCode::Lang1
            | KeyCode::KanaMode
            | KeyCode::Convert
            | KeyCode::ContextMenu
            | KeyCode::IntlYen
            | KeyCode::IntlRo
            | KeyCode::IntlBackslash
            | KeyCode::Backquote
            | KeyCode::F13
            | KeyCode::F14
            | KeyCode::F15
            | KeyCode::F16
            | KeyCode::F17
            | KeyCode::F18
            | KeyCode::F19
            | KeyCode::F20
            | KeyCode::F21
            | KeyCode::F22
            | KeyCode::F23
            | KeyCode::F24
            | KeyCode::F25
            | KeyCode::F26
            | KeyCode::F27
            | KeyCode::F28
            | KeyCode::F29
            | KeyCode::F30
            | KeyCode::F31
            | KeyCode::F32
            | KeyCode::F33
            | KeyCode::F34
            | KeyCode::F35
            | KeyCode::Unidentified { .. } => "Blanks/Blank_Black_Normal.png",
        };
        format!("Xelu_Free_Controller&Key_Prompts/Keyboard & Mouse/{}", file_name).into()
    }
}

pub fn add(left: u64, right: u64) -> u64 {
    left + right
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn it_works() {
        let result = add(2, 2);
        assert_eq!(result, 4);
    }
}
